# /etc/haproxy/haproxy.cfg
#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log stdout format raw local0
    daemon

    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    ssl-default-bind-options no-sslv3

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode    tcp
    log     global

    option  httplog
    option  dontlognull
    option  http-server-close
    option  forwardfor      except 127.0.0.0/8
    option  redispatch

    retries 1
    
    timeout http-request    10s
    timeout queue           20s
    timeout connect         5s
    timeout client          35s
    timeout server          35s
    timeout http-keep-alive 10s
    timeout check           10s

#---------------------------------------------------------------------
# apiserver frontend which proxys to the control plane nodes
#---------------------------------------------------------------------
frontend apiserver_frontend
    bind *:6443
    mode tcp
    option tcplog
    default_backend apiserver_backend

#---------------------------------------------------------------------
# round robin balancing for apiserver
#---------------------------------------------------------------------
backend apiserver_backend
    option httpchk

    http-check connect ssl
    http-check send meth GET uri /healthz
    http-check expect status 200

    mode tcp
    balance     roundrobin

{% for host in control_planes %}
    server {{hostvars[host].inventory_hostname}} {{hostvars[host].ansible_host}}:6443 check verify none
{% endfor %}

#---------------------------------------------------------------------
# http frontend which proxys to the control plane nodes (nginx ingress daemonset)
#---------------------------------------------------------------------
frontend ingress_frontend_http
    mode tcp
    bind *:80
    option tcplog
    default_backend ingress_backend_http

backend ingress_backend_http
    mode    tcp
    balance roundrobin
    
{% for host in control_planes %}
    server {{hostvars[host].inventory_hostname}} {{hostvars[host].ansible_host}}:30080 check verify none
{% endfor %}

#---------------------------------------------------------------------
# https frontend which proxys to the control plane nodes (nginx ingress daemonset)
#---------------------------------------------------------------------
frontend ingress_frontend_https
    mode tcp
    bind *:443

    option  tcplog
    tcp-request     inspect-delay 5s
    tcp-request     content accept if { req.ssl_hello_type 1 }
    
    acl proto_tls   req.ssl_hello_type 1
    default_backend ingress_backend_https


backend ingress_backend_https
    mode    tcp
    balance roundrobin
    option  ssl-hello-chk

{% for host in control_planes %}
    server {{hostvars[host].inventory_hostname}} {{hostvars[host].ansible_host}}:30443 check verify none
{% endfor %}
