apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-example
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-example
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-example
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-example
    spec:
      containers:
        - name: echo
          image: hashicorp/http-echo:1.0.0
          args:
            - -listen=:8080
            - -text="hoka"
          resources:
            limits:
              memory: 100Mi
              cpu: "0.5"
            requests:
              memory: 50Mi
              cpu: "0.1"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-example
  namespace: ingress-nginx
spec:
  selector:
    app.kubernetes.io/name: ingress-example
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-example
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-example
spec:
  ingressClassName: nginx
  # tls:
  #   - secretName: ingress-example-tls
  #     hosts:
  #       - ingress-example.hokaxbt.com

  rules:
    - host: ingress-example.hokaxbt.com
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: ingress-example
                port:
                  number: 80
